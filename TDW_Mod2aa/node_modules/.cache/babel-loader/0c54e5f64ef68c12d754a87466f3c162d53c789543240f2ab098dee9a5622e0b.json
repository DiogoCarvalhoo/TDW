{"ast":null,"code":"var _jsxFileName = \"/home/diogo/Desktop/Uni/5\\xBA Ano/TDW/TDW_Mod2a/src/ex2/Components/Todo/Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todo = _ref => {\n  _s();\n  let {\n    element,\n    edit,\n    remove,\n    filter,\n    toggleChecked\n  } = _ref;\n  const [editable, setEditable] = useState(false);\n  const inputRef = useRef(null);\n  console.log(\"todo\");\n  console.log(element);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"todo\",\n      children: editable ? /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"stack-small\",\n        onSubmit: event => {\n          event.preventDefault();\n          edit(element.id, inputRef.current.value);\n          setEditable(false);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"todo-label\",\n            htmlFor: \"todo-0\",\n            children: [\"New name for \", element.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"todo-0\",\n            className: \"todo-text\",\n            type: \"text\",\n            defaultValue: \"\",\n            ref: inputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn todo-cancel\",\n            onClick: () => setEditable(false),\n            children: [\"Cancel\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\",\n              children: [\"renaming \", element]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn__primary todo-edit\",\n            children: [\"Save\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\",\n              children: [\"new name for \", element]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stack-small\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"c-cb\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"todo-\" + element.id,\n            type: \"checkbox\",\n            defaultChecked: element.checked,\n            onChange: () => toggleChecked(element.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"todo-label\",\n            htmlFor: \"todo-0\",\n            children: element\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn\",\n            onClick: () => setEditable(true),\n            children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\",\n              children: element\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 22\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn__danger\",\n            onClick: () => remove(element.id),\n            children: [\"Delete \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"visually-hidden\",\n              children: element\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n// Typechecking in props\n_s(Todo, \"K2ahdOLyP5IVfqMWJgXZp+6NmbA=\");\n_c = Todo;\nTodo.propTypes = {\n  element: PropTypes.object.isRequired,\n  filter: PropTypes.oneOf([\"All\", \"Active\", \"Completed\"]).isRequired,\n  edit: PropTypes.func.isRequired,\n  remove: PropTypes.func.isRequired,\n  toggleChecked: PropTypes.func.isRequired\n};\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","useRef","PropTypes","Todo","element","edit","remove","filter","toggleChecked","editable","setEditable","inputRef","console","log","event","preventDefault","id","current","value","name","checked","propTypes","object","isRequired","oneOf","func"],"sources":["/home/diogo/Desktop/Uni/5ยบ Ano/TDW/TDW_Mod2a/src/ex2/Components/Todo/Todo.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Todo = ({ element, edit, remove, filter, toggleChecked }) => {\n  const [editable, setEditable] = useState(false);\n  const inputRef = useRef(null);\n\n  console.log(\"todo\");\n  console.log(element);\n  return (\n    <>\n      <li className=\"todo\">\n        {editable ? (\n          <form\n            className=\"stack-small\"\n            onSubmit={(event) => {\n              event.preventDefault();\n              edit(element.id, inputRef.current.value);\n              setEditable(false);\n            }}\n          >\n            <div className=\"form-group\">\n              <label className=\"todo-label\" htmlFor=\"todo-0\">\n                New name for {element.name}\n              </label>\n              <input\n                id=\"todo-0\"\n                className=\"todo-text\"\n                type=\"text\"\n                defaultValue=\"\"\n                ref={inputRef}\n              />\n            </div>\n            <div className=\"btn-group\">\n              <button\n                type=\"button\"\n                className=\"btn todo-cancel\"\n                onClick={() => setEditable(false)}\n              >\n                Cancel\n                <span className=\"visually-hidden\">renaming {element}</span>\n              </button>\n              <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n                Save\n                <span className=\"visually-hidden\">new name for {element}</span>\n              </button>\n            </div>\n          </form>\n        ) : (\n          <div className=\"stack-small\">\n            <div className=\"c-cb\">\n              <input\n                id={\"todo-\" + element.id}\n                type=\"checkbox\"\n                defaultChecked={element.checked}\n                onChange={() => toggleChecked(element.id)}\n              />\n              <label className=\"todo-label\" htmlFor=\"todo-0\">\n                {element}\n              </label>\n            </div>\n            <div className=\"btn-group\">\n              <button\n                type=\"button\"\n                className=\"btn\"\n                onClick={() => setEditable(true)}\n              >\n                Edit <span className=\"visually-hidden\">{element}</span>\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn__danger\"\n                onClick={() => remove(element.id)}\n              >\n                Delete <span className=\"visually-hidden\">{element}</span>\n              </button>\n            </div>\n          </div>\n        )}\n      </li>\n    </>\n  );\n};\n\n// Typechecking in props\nTodo.propTypes = {\n  element: PropTypes.object.isRequired,\n  filter: PropTypes.oneOf([\"All\", \"Active\", \"Completed\"]).isRequired,\n  edit: PropTypes.func.isRequired,\n  remove: PropTypes.func.isRequired,\n  toggleChecked: PropTypes.func.isRequired,\n};\n\nexport default Todo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}