{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/diogo/Desktop/Uni/5\\xBA Ano/TDW/TDW_Mod2a/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React from\"react\";import Todo from\"../Todo/Todo\";import styled from\"styled-components\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var List=styled.ul(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  margin-top: 1.2rem;\\n\\n  > * + * {\\n    @media (min-width: 550px) {\\n      margin-top: 2.8rem;\\n    }\\n  }\\n\\n  > * + * {\\n    margin-top: 2.5rem;\\n  }\\n\"])));var TodoList=function TodoList(props){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{id:\"list-heading\",tabIndex:\"-1\",children:\"3 tasks remaining\"}),/*#__PURE__*/_jsx(List,{className:\"todo-list stack-large stack-exception\",\"aria-labelledby\":\"list-heading\",children:props.list.map(function(element,index){return/*#__PURE__*/_jsx(Todo,{index:index,element:element,edit:props.edit,remove:props.remove,filter:props.filter},index);})})]});};// Typechecking in props\nexport default TodoList;","map":{"version":3,"names":["React","Todo","styled","List","ul","TodoList","props","list","map","element","index","edit","remove","filter"],"sources":["/home/diogo/Desktop/Uni/5ยบ Ano/TDW/TDW_Mod2a/src/ex2/Components/TodoList/TodoList.js"],"sourcesContent":["import React from \"react\";\nimport Todo from \"../Todo/Todo\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst List = styled.ul`\n  margin-top: 1.2rem;\n\n  > * + * {\n    @media (min-width: 550px) {\n      margin-top: 2.8rem;\n    }\n  }\n\n  > * + * {\n    margin-top: 2.5rem;\n  }\n`;\n\nconst TodoList = (props) => {\n  return (\n    <>\n      <h2 id=\"list-heading\" tabIndex=\"-1\">\n        3 tasks remaining\n      </h2>\n      <List\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {props.list.map((element, index) => (\n          <Todo\n            key={index}\n            index={index}\n            element={element}\n            edit={props.edit}\n            remove={props.remove}\n            filter={props.filter}\n          ></Todo>\n        ))}\n      </List>\n    </>\n  );\n};\n\n// Typechecking in props\nTodoList.propTypes = {\n  list: PropTypes.func.isRequired,\n  filter: PropTypes.oneOf([\"All\", \"Active\", \"Completed\"]).isRequired,\n  edit: PropTypes.func.isRequired,\n  remove: PropTypes.func.isRequired,\n};\n\nexport default TodoList;\n"],"mappings":"yKAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,KAAI,KAAM,cAAc,CAE/B,MAAOC,OAAM,KAAM,mBAAmB,CAAC,6IAEvC,GAAMC,KAAI,CAAGD,MAAM,CAACE,EAAE,8NAYrB,CAED,GAAMC,SAAQ,CAAG,QAAXA,SAAQ,CAAIC,KAAK,CAAK,CAC1B,mBACE,wCACE,WAAI,EAAE,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,+BAE9B,cACL,KAAC,IAAI,EACH,SAAS,CAAC,uCAAuC,CACjD,kBAAgB,cAAc,UAE7BA,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,SAACC,OAAO,CAAEC,KAAK,qBAC7B,KAAC,IAAI,EAEH,KAAK,CAAEA,KAAM,CACb,OAAO,CAAED,OAAQ,CACjB,IAAI,CAAEH,KAAK,CAACK,IAAK,CACjB,MAAM,CAAEL,KAAK,CAACM,MAAO,CACrB,MAAM,CAAEN,KAAK,CAACO,MAAO,EALhBH,KAAK,CAMJ,EACT,CAAC,EACG,GACN,CAEP,CAAC,CAED;AAQA,cAAeL,SAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}