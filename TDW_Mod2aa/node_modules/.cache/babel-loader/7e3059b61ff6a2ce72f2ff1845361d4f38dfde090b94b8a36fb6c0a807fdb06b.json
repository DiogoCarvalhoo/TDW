{"ast":null,"code":"var _jsxFileName = \"/home/diogo/Desktop/Uni/5\\xBA Ano/TDW/TDW_Mod2a/src/ex3/ex3.js\",\n  _s = $RefreshSig$();\nimport \"./ex3.css\";\nimport TodoForm from \"./Components/TodoForm/TodoForm\";\nimport TodoListFilter from \"./Components/TodoListFilter/TodoListFilter\";\nimport TodoList from \"./Components/TodoList/TodoList\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TasksContext = /*#__PURE__*/React.createContext();\nconst MainDiv = styled.div`\n  background: #fff;\n  margin: 2rem 0 4rem 0;\n  padding: 1rem;\n  position: relative;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 2.5rem 5rem 0 rgba(0, 0, 0, 0.1);\n\n  > * {\n    max-width: 50rem;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  > form {\n    max-width: 100%;\n  }\n\n  > h1 {\n    display: block;\n    max-width: 100%;\n    text-align: center;\n    margin: 0;\n    margin-bottom: 1rem;\n  }\n\n  > * + * {\n    margin-top: 2.5rem;\n  }\n\n  @media screen and (min-width: 550px) {\n    padding: 4rem;\n    > * + * {\n      margin-top: 2.8rem;\n    }\n  }\n`;\n_c = MainDiv;\nfunction App() {\n  _s();\n  const [list, setList] = useState([{\n    id: 0,\n    name: \"Eat\",\n    checked: true\n  }, {\n    id: 1,\n    name: \"Sleep\",\n    checked: false\n  }, {\n    id: 2,\n    name: \"Repeat\",\n    checked: false\n  }]);\n  const [filter, setFilter] = useState(\"All\");\n  const add = newTaskName => {\n    let newId = Math.max(...list.map(task => task.id)) + 1;\n\n    // If list is empty\n    if (newId === -Infinity) newId = 0;\n    const newTask = {\n      id: newId,\n      name: newTaskName,\n      checked: false\n    };\n    setList([...list, newTask]);\n  };\n  const edit = (id, newName) => {\n    let index = list.findIndex(task => task.id === id);\n    let updatedList = [...list];\n    updatedList[index] = {\n      ...list[index],\n      name: newName\n    };\n    setList(updatedList);\n  };\n  const remove = id => {\n    let index = list.findIndex(task => task.id === id);\n    let udpatedList = [...list];\n    udpatedList.splice(index, 1);\n    setList(udpatedList);\n  };\n  const toggleChecked = id => {\n    let index = list.findIndex(task => task.id === id);\n    let updatedList = [...list];\n    updatedList[index] = {\n      ...updatedList[index],\n      checked: !updatedList[index].checked\n    };\n    setList(updatedList);\n  };\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `To Do - ${list.length} tasks`;\n  }, [list]);\n  return /*#__PURE__*/_jsxDEV(TasksContext.Provider, {\n    value: list,\n    children: /*#__PURE__*/_jsxDEV(MainDiv, {\n      className: \"todoapp stack-large\",\n      children: [/*#__PURE__*/_jsxDEV(TodoForm, {\n        add: add\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoListFilter, {\n        filter: filter,\n        setFilter: setFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        list: list,\n        filter: filter,\n        edit: edit,\n        remove: remove,\n        toggleChecked: toggleChecked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UTlZUnuEdn+X8EVw4Ich648hlg4=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"MainDiv\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["TodoForm","TodoListFilter","TodoList","useEffect","useState","styled","React","TasksContext","createContext","MainDiv","div","App","list","setList","id","name","checked","filter","setFilter","add","newTaskName","newId","Math","max","map","task","Infinity","newTask","edit","newName","index","findIndex","updatedList","remove","udpatedList","splice","toggleChecked","document","title","length"],"sources":["/home/diogo/Desktop/Uni/5ยบ Ano/TDW/TDW_Mod2a/src/ex3/ex3.js"],"sourcesContent":["import \"./ex3.css\";\nimport TodoForm from \"./Components/TodoForm/TodoForm\";\nimport TodoListFilter from \"./Components/TodoListFilter/TodoListFilter\";\nimport TodoList from \"./Components/TodoList/TodoList\";\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport React from \"react\";\n\nexport const TasksContext = React.createContext();\n\nconst MainDiv = styled.div`\n  background: #fff;\n  margin: 2rem 0 4rem 0;\n  padding: 1rem;\n  position: relative;\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 2.5rem 5rem 0 rgba(0, 0, 0, 0.1);\n\n  > * {\n    max-width: 50rem;\n    margin-left: auto;\n    margin-right: auto;\n  }\n\n  > form {\n    max-width: 100%;\n  }\n\n  > h1 {\n    display: block;\n    max-width: 100%;\n    text-align: center;\n    margin: 0;\n    margin-bottom: 1rem;\n  }\n\n  > * + * {\n    margin-top: 2.5rem;\n  }\n\n  @media screen and (min-width: 550px) {\n    padding: 4rem;\n    > * + * {\n      margin-top: 2.8rem;\n    }\n  }\n`;\n\nfunction App() {\n  const [list, setList] = useState([\n    { id: 0, name: \"Eat\", checked: true },\n    { id: 1, name: \"Sleep\", checked: false },\n    { id: 2, name: \"Repeat\", checked: false },\n  ]);\n  const [filter, setFilter] = useState(\"All\");\n\n  const add = (newTaskName) => {\n    let newId = Math.max(...list.map((task) => task.id)) + 1;\n\n    // If list is empty\n    if (newId === -Infinity) newId = 0;\n    const newTask = { id: newId, name: newTaskName, checked: false };\n    setList([...list, newTask]);\n  };\n\n  const edit = (id, newName) => {\n    let index = list.findIndex((task) => task.id === id);\n    let updatedList = [...list];\n    updatedList[index] = { ...list[index], name: newName };\n    setList(updatedList);\n  };\n\n  const remove = (id) => {\n    let index = list.findIndex((task) => task.id === id);\n    let udpatedList = [...list];\n    udpatedList.splice(index, 1);\n    setList(udpatedList);\n  };\n\n  const toggleChecked = (id) => {\n    let index = list.findIndex((task) => task.id === id);\n\n    let updatedList = [...list];\n    updatedList[index] = {\n      ...updatedList[index],\n      checked: !updatedList[index].checked,\n    };\n    setList(updatedList);\n  };\n\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `To Do - ${list.length} tasks`;\n  }, [list]);\n\n  return (\n    <TasksContext.Provider value={list}>\n      <MainDiv className=\"todoapp stack-large\">\n        <TodoForm add={add}></TodoForm>\n        <TodoListFilter filter={filter} setFilter={setFilter}></TodoListFilter>\n        <TodoList\n          list={list}\n          filter={filter}\n          edit={edit}\n          remove={remove}\n          toggleChecked={toggleChecked}\n        ></TodoList>\n      </MainDiv>\n    </TasksContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}