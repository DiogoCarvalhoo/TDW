{"ast":null,"code":"var _jsxFileName = \"/home/diogo/Desktop/Uni/5\\xBA Ano/TDW/TDW_Mod2a/ex1_react/src/Components/Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = props => {\n  _s();\n  const [editable, setEditable] = useState(false);\n  const inputRef = useRef(null);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"todo\",\n    children: editable ? /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"stack-small\",\n      onSubmit: () => props.edit(props.index, inputRef.current.value),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"todo-label\",\n          htmlFor: \"todo-0\",\n          children: [\"New name for \", props.element]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"todo-0\",\n          className: \"todo-text\",\n          type: \"text\",\n          defaultValue: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn todo-cancel\",\n          onClick: () => setEditable(false),\n          children: [\"Cancel\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: [\"renaming \", props.element]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn__primary todo-edit\",\n          children: [\"Save\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            ref: inputRef,\n            children: [\"new name for \", props.element]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stack-small\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"c-cb\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"todo-0\",\n          type: \"checkbox\",\n          defaultChecked: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"todo-label\",\n          htmlFor: \"todo-0\",\n          children: props.element\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn\",\n          onClick: () => setEditable(true),\n          children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: props.element\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn__danger\",\n          onClick: () => props.remove(props.index),\n          children: [\"Delete \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: props.element\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"K2ahdOLyP5IVfqMWJgXZp+6NmbA=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","useRef","Todo","props","editable","setEditable","inputRef","edit","index","current","value","element","remove"],"sources":["/home/diogo/Desktop/Uni/5ยบ Ano/TDW/TDW_Mod2a/ex1_react/src/Components/Todo.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\n\nconst Todo = (props) => {\n  const [editable, setEditable] = useState(false);\n  const inputRef = useRef(null);\n\n  return (\n    <li className=\"todo\">\n      {editable ? (\n        <form\n          className=\"stack-small\"\n          onSubmit={() => props.edit(props.index, inputRef.current.value)}\n        >\n          <div className=\"form-group\">\n            <label className=\"todo-label\" htmlFor=\"todo-0\">\n              New name for {props.element}\n            </label>\n            <input\n              id=\"todo-0\"\n              className=\"todo-text\"\n              type=\"text\"\n              defaultValue=\"\"\n            />\n          </div>\n          <div className=\"btn-group\">\n            <button\n              type=\"button\"\n              className=\"btn todo-cancel\"\n              onClick={() => setEditable(false)}\n            >\n              Cancel\n              <span className=\"visually-hidden\">renaming {props.element}</span>\n            </button>\n            <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n              Save\n              <span className=\"visually-hidden\" ref={inputRef}>\n                new name for {props.element}\n              </span>\n            </button>\n          </div>\n        </form>\n      ) : (\n        <div className=\"stack-small\">\n          <div className=\"c-cb\">\n            <input id=\"todo-0\" type=\"checkbox\" defaultChecked=\"\" />\n            <label className=\"todo-label\" htmlFor=\"todo-0\">\n              {props.element}\n            </label>\n          </div>\n          <div className=\"btn-group\">\n            <button\n              type=\"button\"\n              className=\"btn\"\n              onClick={() => setEditable(true)}\n            >\n              Edit <span className=\"visually-hidden\">{props.element}</span>\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn__danger\"\n              onClick={() => props.remove(props.index)}\n            >\n              Delete <span className=\"visually-hidden\">{props.element}</span>\n            </button>\n          </div>\n        </div>\n      )}\n    </li>\n  );\n};\n\nexport default Todo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}